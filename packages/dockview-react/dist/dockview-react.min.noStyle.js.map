{"version":3,"file":"dockview-react.min.noStyle.js","sources":["../../dockview-core/dist/esm/dnd/dataTransfer.js","../../dockview-core/dist/esm/events.js","../../dockview-core/dist/esm/lifecycle.js","../../dockview-core/dist/esm/dom.js","../../dockview-core/dist/esm/array.js","../../dockview-core/dist/esm/math.js","../../dockview-core/dist/esm/splitview/viewItem.js","../../dockview-core/dist/esm/splitview/splitview.js","../../dockview-core/dist/esm/splitview/options.js","../../dockview-core/dist/esm/paneview/paneview.js","../../dockview-core/dist/esm/gridview/leafNode.js","../../dockview-core/dist/esm/gridview/branchNode.js","../../dockview-core/dist/esm/gridview/gridview.js","../../dockview-core/dist/esm/gridview/options.js","../../dockview-core/dist/esm/resizable.js","../../dockview-core/dist/esm/gridview/baseComponentGridview.js","../../dockview-core/dist/esm/api/component.api.js","../../dockview-core/dist/esm/dnd/abstractDragHandler.js","../../dockview-core/dist/esm/dnd/dnd.js","../../dockview-core/dist/esm/dnd/droptarget.js","../../dockview-core/dist/esm/paneview/options.js","../../dockview-core/dist/esm/api/panelApi.js","../../dockview-core/dist/esm/api/splitviewPanelApi.js","../../dockview-core/dist/esm/api/paneviewPanelApi.js","../../dockview-core/dist/esm/gridview/basePanelView.js","../../dockview-core/dist/esm/paneview/paneviewPanel.js","../../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","../../dockview-core/dist/esm/dockview/components/panel/content.js","../../dockview-core/dist/esm/dnd/ghost.js","../../dockview-core/dist/esm/dockview/components/tab/tab.js","../../dockview-core/dist/esm/dockview/events.js","../../dockview-core/dist/esm/svg.js","../../dockview-core/dist/esm/scrollbar.js","../../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","../../dockview-core/dist/esm/dnd/groupDragHandler.js","../../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","../../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","../../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","../../dockview-core/dist/esm/dockview/options.js","../../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","../../dockview-core/dist/esm/api/gridviewPanelApi.js","../../dockview-core/dist/esm/gridview/gridviewPanel.js","../../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","../../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","../../dockview-core/dist/esm/dockview/theme.js","../../dockview-core/dist/esm/api/dockviewPanelApi.js","../../dockview-core/dist/esm/dockview/dockviewPanel.js","../../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","../../dockview-core/dist/esm/dockview/dockviewPanelModel.js","../../dockview-core/dist/esm/dockview/deserializer.js","../../dockview-core/dist/esm/dockview/components/watermark/watermark.js","../../dockview-core/dist/esm/overlay/overlay.js","../../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","../../dockview-core/dist/esm/constants.js","../../dockview-core/dist/esm/overlay/overlayRenderContainer.js","../../dockview-core/dist/esm/popoutWindow.js","../../dockview-core/dist/esm/dockview/strictEventsSequencing.js","../../dockview-core/dist/esm/dockview/components/popupService.js","../../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","../../dockview-core/dist/esm/dockview/dockviewComponent.js","../../dockview-core/dist/esm/gridview/gridviewComponent.js","../../dockview-core/dist/esm/splitview/splitviewComponent.js","../../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","../../dockview-core/dist/esm/paneview/paneviewComponent.js","../../dockview-core/dist/esm/splitview/splitviewPanel.js","../../dockview-core/dist/esm/api/entryPoints.js","../../dockview/dist/esm/svg.js","../../dockview/dist/esm/dockview/defaultTab.js","../../dockview/dist/esm/react.js","../../dockview/dist/esm/dockview/reactContentPart.js","../../dockview/dist/esm/dockview/reactHeaderPart.js","../../dockview/dist/esm/dockview/reactWatermarkPart.js","../../dockview/dist/esm/dockview/headerActionsRenderer.js","../../dockview/dist/esm/dockview/dockview.js","../../dockview/dist/esm/gridview/view.js","../../dockview/dist/esm/gridview/gridview.js","../../dockview/dist/esm/paneview/view.js","../../dockview/dist/esm/paneview/paneview.js","../../dockview/dist/esm/splitview/view.js","../../dockview/dist/esm/splitview/splitview.js"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction cloneNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(node.orientation, node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            result.addChild(cloneNode(child, child.size, child.orthogonalSize), child.size, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, node.orientation, orthogonalSize);\n    }\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    normalize() {\n        if (!this._root) {\n            return;\n        }\n        if (this._root.children.length !== 1) {\n            return;\n        }\n        const oldRoot = this.root;\n        // can remove one level of redundant branching if there is only a single child\n        const childReference = oldRoot.children[0];\n        if (childReference instanceof LeafNode) {\n            return;\n        }\n        oldRoot.element.remove();\n        const child = oldRoot.removeChild(0); // Remove child to prevent double disposal\n        oldRoot.dispose(); // Dispose old root (won't dispose removed child)\n        child.dispose(); // Dispose the removed child\n        this._root = cloneNode(childReference, childReference.size, childReference.orthogonalSize);\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el, disabled) {\n        super();\n        this.el = el;\n        this.disabled = disabled;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    setDisabled(disabled) {\n        this.disabled = disabled;\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event) || this.disabled) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel, disabled) {\n        super(element, disabled);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        this.dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel, !!this.accessor.options.disableDnd);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, this.dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), this.dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        this.dragHandler.setDisabled(!!this.accessor.options.disableDnd);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            // Normalize wheel delta for lines vs pixels.\n            function normalizeDelta(e, axis) {\n                const delta = axis === 'x' ? e.deltaX : e.deltaY;\n                // DOM_DELTA_LINE = 1 -> convert lines to pixels (~16px per line typical)\n                if (e.deltaMode === 1)\n                    return delta * 16;\n                return delta; // DOM_DELTA_PIXEL (0) or others\n            }\n            const canScrollHorizontally = this.scrollableElement.scrollWidth >\n                this.scrollableElement.clientWidth;\n            if (canScrollHorizontally && !event.shiftKey) {\n                const absX = Math.abs(event.deltaX);\n                const absY = Math.abs(event.deltaY);\n                // Handle horizontal touchpad gestures (two-finger horizontal swipe)\n                if (absX > absY && absX > 0) {\n                    const deltaX = normalizeDelta(event, 'x');\n                    this._scrollLeft += deltaX;\n                    this.calculateScrollbarStyles();\n                    event.preventDefault();\n                    return;\n                }\n                // Handle vertical touchpad gestures (two-finger vertical/diagonal swipe)\n                // Convert vertical scrolling to horizontal for tab navigation\n                if (absY > absX && absY > 0) {\n                    const deltaY = normalizeDelta(event, 'y');\n                    // Positive deltaY means user scrolled down -> move tabs right (increase scrollLeft)\n                    this._scrollLeft += deltaY;\n                    this.calculateScrollbarStyles();\n                    event.preventDefault();\n                    return;\n                }\n            }\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group, disabled) {\n        super(element, disabled);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        this.handler = new GroupDragHandler(this._element, accessor, group, !!this.accessor.options.disableDnd);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this.handler, this.handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.handler.setDisabled(!!this.accessor.options.disableDnd);\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nimport { Tabs } from './tabs';\nimport { VoidContainer } from './voidContainer';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\nexport const DESERIALIZATION_POPOUT_DELAY_MS = 100;\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    updateAllPositions() {\n        if (this._disposed) {\n            return;\n        }\n        // Invalidate position cache to force recalculation\n        this.positionCache.invalidate();\n        // Call resize function directly for all visible panels\n        for (const entry of Object.values(this.map)) {\n            if (entry.panel.api.isVisible && entry.resize) {\n                entry.resize();\n            }\n        }\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        // store the resize function for direct access\n        this.map[panel.api.id].resize = resize;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, DESERIALIZATION_POPOUT_DELAY_MS, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    /**\n     * Promise that resolves when all popout groups from the last fromJSON call are restored.\n     * Useful for tests that need to wait for delayed popout creation.\n     */\n    get popoutRestorationPromise() {\n        return this._popoutRestorationPromise;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._popoutRestorationPromise = Promise.resolve();\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        this.gridview.normalize();\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            // Create a promise that resolves when all popout groups are created\n            const popoutPromises = [];\n            // Queue popup group creation with delays to avoid browser blocking\n            serializedPopoutGroups.forEach((serializedPopoutGroup, index) => {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                // Add a small delay for each popup after the first to avoid browser popup blocking\n                const popoutPromise = new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.addPopoutGroup(group, {\n                            position: position !== null && position !== void 0 ? position : undefined,\n                            overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                            referenceGroup: gridReferenceGroup\n                                ? this.getPanel(gridReferenceGroup)\n                                : undefined,\n                            popoutUrl: url,\n                        });\n                        resolve();\n                    }, index * DESERIALIZATION_POPOUT_DELAY_MS); // 100ms delay between each popup\n                });\n                popoutPromises.push(popoutPromise);\n            });\n            // Store the promise for tests to wait on\n            this._popoutRestorationPromise = Promise.all(popoutPromises).then(() => void 0);\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        // Force position updates for always visible panels after DOM layout is complete\n        requestAnimationFrame(() => {\n            this.overlayRenderContainer.updateAllPositions();\n        });\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            // Check if destination group is empty - if so, force render the component\n            const isDestinationGroupEmpty = destinationGroup.model.size === 0;\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: ((_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false) && !isDestinationGroupEmpty,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            // Ensure group becomes active after move\n            if (options.skipSetActive !== true) {\n                // For center moves (merges), we need to ensure the target group is active\n                // unless explicitly told not to (skipSetActive: true)\n                this.doSetGroupAndPanelActive(to);\n            }\n            else if (!this.activePanel) {\n                // Even with skipSetActive: true, ensure there's an active panel if none exists\n                // This maintains basic functionality while respecting skipSetActive\n                this.doSetGroupAndPanelActive(to);\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, {\n                                skipActive: true,\n                            });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        // Ensure group becomes active after move\n        if (options.skipSetActive === false) {\n            // Only activate when explicitly requested (skipSetActive: false)\n            // Use 'to' group for non-center moves since 'from' may have been destroyed\n            const targetGroup = to !== null && to !== void 0 ? to : from;\n            this.doSetGroupAndPanelActive(targetGroup);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Disposable","exports","DockviewEvent","Event","any","children","listener","disposables","map","child","dispose","forEach","d","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","length","queueMicrotask","delete","addDisposableListener","element","type","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","DockviewDisposable","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","x","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","NEGATIVE_INFINITY","overloadMaxDelta","snapBefore","snapAfter","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","cloneNode","flipNode","orthogonal","totalSize","childSize","indexInParent","parentElement","firstElementChild","lastElementChild","nextElementSibling","getGridLocation","test","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","getDirectionOrientation","rest","_index","isGridBranchNode","serializeBranchNode","box","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","normalize","childReference","insertOrthogonalSplitviewAtRoot","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","Array","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","setDisabled","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","normalizeDelta","axis","deltaX","deltaY","deltaMode","absX","abs","absY","calculateScrollbarStyles","originalClientX","originalScrollLeft","onEnd","scrollLeft","_animationTimer","px","percentageComplete","MouseWheelSpeed","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","wrapper","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","isPanelOptionsWithPanel","referencePanel","isPanelOptionsWithGroup","referenceGroup","isGroupOptionsWithPanel","isGroupOptionsWithGroup","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeAbyss","name","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","updateAllPositions","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","popoutRestorationPromise","_popoutRestorationPromise","gap","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","popoutPromises","serializedPopoutGroup","popoutPromise","all","hasActiveGroup","initial","initialWidth","initialHeight","findGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","isDestinationGroupEmpty","moveGroup","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","dndOverlayMounting","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","_key","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","CloseButton","React","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","ReactComponentBridge","props","ref","triggerRender","useState","_props","useRef","componentProps","useImperativeHandle","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","createContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","isReactComponent","bridgeComponent","forwardRef","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","useDebugValue","useCallback","existingPortals","$$typeof","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","useEffect","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","ReactGridPanelView","reactComponent","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","ReactPanelView","SplitviewReact","splitviewRef","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick"],"mappings":"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"}